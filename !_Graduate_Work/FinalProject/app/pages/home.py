from datetime import datetime

import dash
from dash import dcc, html, Input, Output, State, ctx, callback
import dash_bootstrap_components as dbc
from assets.dbc_styles import CONTENT_STYLE

dash.register_page(__name__, path='/')
layout = dbc.Container(
    [
        html.H4(" Данное программное обеспечение предназначено для:"),
        html.Li(" осуществления мониторинга за перемещением технических средств и персонала в промышленных зонах"),
        html.Li(" анализа статистических данных, получаемых с аппаратных средств"),
        html.Li(" передачи управляющих воздействий на технические средства"),
        html.Hr(),
        html.H5(" Для демонстрации возможностей программного обеспечения сформирован набор синтетических данных."),
        html.Hr(),
        html.H5(' Вкладка "моделирование" предназначена для наглядного представления о решаемых программно-аппаратным комплексом задачах в части:'),
        html.Li(" предотвращения столкновения технических средств"),
        html.Li(" реализации задач обеспечения безопасности персонала в условиях промышленной зоны"),
        html.Li(" осуществления управляющих воздействий на технические средства с целью увеличения/снижения их зоны обнаружения"),
        html.Hr(),
        html.H5(' На вкладке "аналитика" представлены типовые аналитические отчеты, получаемые на основе сбора статистики о перемещении технических средств и персонала:'),
        html.Li(" гистограмма с частотами возникновения аварийных ситуаций по всем техническим средствам"),
        html.Li(" гистограмма, отражающая число ситуаций опасного сближения техники и человека для выбранного id блока"),
        html.Li(" визуализация распределения аварийных ситуаций на карте промышленной зоны"),
        html.Li(" состояние заряда аккумуляторных батарей персональных меток в выбранный момент времени"),
    ],
    style=CONTENT_STYLE
)
print(f"{datetime.now()}: info page loaded")
