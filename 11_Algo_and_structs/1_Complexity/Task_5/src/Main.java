//1.Пишем алгоритм поиска нужного числа последовательности Фибоначчи, но в этот раз
//откажемся от рекурсии и воспользуемся обычным алгоритмом, что даст нам
//линейную сложность, т.к. вычисление каждого из чисел последовательности будет
//происходить ровно 1 раз.
//2.Вариантов решения может быть несколько, но нужно предложить студентам считать
//последовательность с первого числа и далее до тех пор, пока не доберемся до
//нужного номера. При этом значение предыдущих элементов нужно сохранять, чтобы
//не приходилось вычислять заново, как это происходило при рекурсивном методе.

public class Main {
    public static void main(String[] args) {

        System.out.println(fibo(11));
    }

    public static int fibo(int n) {
        if (n == 0)
            return 0;
        else if (n <= 2)
            return 1;
        int [] array = new int[n + 1];
        array[0] = 0;
        array[1] = 1;
        array[2] = 1;
        for (int i = 3; i <= n; i++)
            array[i] = array[i - 1] + array[i - 2];
        return array[n-1];
    }
}
